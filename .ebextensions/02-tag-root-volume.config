# The EC2 role needs the following policy:
# {
#     "Version": "2012-10-17",
#     "Statement": [
#         {
#             "Effect": "Allow",
#             "Action": "ec2:DescribeVolumes",
#             "Resource": "*"
#         },
#         {
#             "Effect": "Allow",
#             "Action": "ec2:CreateTags",
#             "Resource": "arn:aws:ec2:*:*:volume/*"
#         }
#     ]
# }

# files:
#   /opt/tag-ebs-volumes.sh:
#     mode: "000755"
#     owner: root
#     group: root
#     content: |
#       #!/bin/bash -e
#       set -o pipefail
#       METADATA_TOKEN=$(curl -fsS -X PUT -H "X-aws-ec2-metadata-token-ttl-seconds: 600" http://169.254.169.254/latest/api/token)
#       region=$(curl -fsS -H "X-aws-ec2-metadata-token: $METADATA_TOKEN" http://169.254.169.254/2019-10-01/meta-data/placement/region)
#       instance_id=$(curl -fsS -H "X-aws-ec2-metadata-token: $METADATA_TOKEN" http://169.254.169.254/2019-10-01/meta-data/instance-id)
#       aws ec2 describe-volumes --region "$region" --filters Name=attachment.instance-id,Values="$instance_id" --query 'Volumes[].[VolumeId,Tags[?Key==`Name`].Value|[0]]' --output text | grep None$ | while read -r volume_id name; do
#         echo "Tagging $volume_id"
#         aws ec2 create-tags --region "$region" --resources "$volume_id" --tags Key=Name,Value=rssbox
#       done
#
# commands:
#   "01-tag-ebs-volumes":
#     test: test ! -f /opt/tag-ebs-volumes.done
#     command: /opt/tag-ebs-volumes.sh && touch /opt/tag-ebs-volumes.done
